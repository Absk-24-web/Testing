package SheetDownload;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.sql.*;
import java.util.Date;

public class PDF_Download {

    private static final Font titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static final Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
    private static final Font headerFont = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
    private static final Font detailFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD, BaseColor.DARK_GRAY);
    private static final Font normal = new Font(Font.FontFamily.TIMES_ROMAN, 12);


    public static void main(String[] args) {
        export_PDF();
    }

    public static void export_PDF() {
        String jdbcURL = "jdbc:mysql://localhost:3306/abhishek";
        String username = "root";
        String password = "lipi123";

        try (Connection connection = DriverManager.getConnection(jdbcURL, username, password)) {
            String sql = "SELECT * FROM expense";

            Statement statement = connection.createStatement();

            ResultSet result = statement.executeQuery(sql);
            //set the download file path
            String pdfFilePath = "C:\\Users\\df-dev16\\Desktop\\Test.pdf";
            //create doc.
            Document document = new Document(PageSize.A4, 50, 50, 50, 50);
            //add doc. in pdf
            PdfWriter.getInstance(document, new FileOutputStream(pdfFilePath));
            //open doc.
            document.open();
            //adding the title
            addTitle(document);
            //adding table
            addTable(result, document);
            //closed doc.
            document.close();
        } catch (Exception e) {
            System.out.println("Error-" + e.getMessage());
        }
    }

    private static void addTitle(Document document) throws DocumentException {
        Paragraph lineGaping = new Paragraph();

        // Lets write a big header
        Paragraph title = new Paragraph("Expense Report", titleFont);
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);

        // Will create: Report generated by: _name, _date
        Paragraph reportDetails = new Paragraph("Report generated by: Abhishek, Date:-" + new Date(), detailFont); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
        reportDetails.setAlignment(Element.ALIGN_CENTER);
        document.add(reportDetails);
        // We add one empty line
        addEmptyLine(lineGaping, 1);
        document.add(lineGaping);
    }

    private static void addTable(ResultSet result, Document document) throws DocumentException, SQLException {
        Paragraph tableParagraph = new Paragraph();

        //specify column widths
        float[] columnWidths = {0.5f, 1f, 1f, 1f, 1f};
        //create PDF table with the given widths
        PdfPTable table = new PdfPTable(columnWidths);
        // set table width a percentage of the page width
        table.setWidthPercentage(90f);

        //insert column headings
        insertCell(table, "Id", headerFont);
        insertCell(table, "Description", headerFont);
        insertCell(table, "Amount", headerFont);
        insertCell(table, "Month", headerFont);
        insertCell(table, "Year", headerFont);

        //insert rows till length of table
        while (result.next()) {
            //getting data from db
            String id = result.getString("id");
            String description = result.getString("description");
            String amount = result.getString("amount");
            String month = result.getString("month");
            String year = result.getString("year");

            //create rows
            insertCell(table, id, normal);
            insertCell(table, description, normal);
            insertCell(table, amount, normal);
            insertCell(table, month, normal);
            insertCell(table, year, normal);
        }
        //add the PDF table to the paragraph
        tableParagraph.add(table);
        // add the paragraph to the document
        document.add(tableParagraph);
    }

    private static void insertCell(PdfPTable table, String text, Font font) {

        //create a new cell with the specified Text and Font
        PdfPCell cell = new PdfPCell(new Phrase(text.trim(), font));
        //set the cell alignment
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        //set the cell column span in case you want to merge two or more cells
        cell.setColspan(1);
        //in case there is no text and you wan to create an empty row
        if (text.trim().equalsIgnoreCase("")) {
            cell.setMinimumHeight(10f);
        }
        //add the call to the table
        table.addCell(cell);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

}
